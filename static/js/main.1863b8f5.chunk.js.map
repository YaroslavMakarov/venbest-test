{"version":3,"sources":["helpers/api.ts","store/persons.ts","store/filters.ts","store/rootStore.ts","components/Person/Person.tsx","components/Persons/Persons.tsx","components/FiltersBar/FiltersBar.tsx","App.tsx","index.tsx"],"names":["getPersons","a","fetch","responsePersonsAPI","json","personsFromServer","initialPersonsState","isLoading","isError","persons","personsReducer","state","action","type","setAge","age","initialFiltersState","name","lastName","male","female","filtersReducer","console","log","rootReducer","combineReducers","loadingPersons","filters","store","createStore","applyMiddleware","thunk","personsSelector","maleFilterSelector","femaleFilterSelector","ageFilterSelector","nameFilterSelector","toLowerCase","lastNameFilterSelector","Person","person","lastname","sex","className","Persons","useSelector","nameFilter","lastNameFilter","ageFilter","maleFilter","femaleFilter","useState","preparePersons","setPreparePersons","useMemo","personsArray","filter","includes","useEffect","map","key","FiltersBar","nameValue","setNameValue","lastNameValue","setLastNameValue","ageValue","setAgeValue","NaNAlert","changeNaNAlert","maleIsChecked","femaleIsChecked","filterDispatch","useDispatch","debounceFilterParams","useCallback","debounce","value","setName","isNaN","Number","changeTextInput","event","target","placeholder","onChange","isNumberAgeInput","checked","App","personThunkDispatch","dispatch","then","successLoading","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1863b8f5.chunk.js","sourcesContent":["const API_URL_PERSONS = 'https://venbest-test.herokuapp.com/';\r\n\r\nexport const getPersons = async () => {\r\n    const responsePersonsAPI = await fetch(API_URL_PERSONS);\r\n    const personsFromServer = await responsePersonsAPI.json();\r\n\r\n    return personsFromServer;\r\n};\r\n","import { Action, Dispatch } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { getPersons } from \"../helpers/api\";\r\nimport { State } from \"./rootStore\";\r\n\r\nconst START_LOADING = \"START_LOADING\";\r\nconst SUCCESS_LOADING = \"SUCCESS_LOADING\";\r\nconst ERROR_LOADING = \"ERROR_LOADING\";\r\n\r\n\r\n//ActionTypes and action creators\r\ntype StartLoading = Action<typeof START_LOADING> & {\r\n    isLoading: boolean;\r\n};\r\ntype ErrorLoading = Action<typeof ERROR_LOADING> & {\r\n    isError: boolean;\r\n};\r\ntype SuccessLoading = Action<typeof SUCCESS_LOADING> & {\r\n    persons: Person[];\r\n};\r\n\r\nexport const startLoading = (isLoading: boolean): StartLoading => ({\r\n    type: START_LOADING,\r\n    isLoading,\r\n});\r\nexport const errorLoading = (isError: boolean): ErrorLoading => ({\r\n    type: ERROR_LOADING,\r\n    isError,\r\n});\r\nexport const successLoading = (persons: Person[]): SuccessLoading => ({\r\n    type: SUCCESS_LOADING,\r\n    persons,\r\n});\r\n\r\n//thunks\r\ntype PersonsThunk = ThunkAction<void, State, unknown, Action<string>>\r\n\r\nexport const loadingPersons = (): PersonsThunk => {\r\n    return (dispatch: Dispatch<AllPersonsActions>) => {\r\n        dispatch(startLoading(true));\r\n\r\n        return getPersons()\r\n            .then(persons => dispatch(successLoading(persons)))\r\n            .catch(() => dispatch(errorLoading(true)));\r\n    };\r\n};\r\nexport type AllPersonThunkAction = PersonsThunk;\r\n\r\nexport type InitialPersonsState = {\r\n    isLoading: boolean;\r\n    isError: boolean;\r\n    persons: Person[];\r\n};\r\n\r\nconst initialPersonsState: InitialPersonsState = {\r\n    isLoading: false,\r\n    isError: false,\r\n    persons:[],\r\n};\r\n\r\nexport type AllPersonsActions = StartLoading\r\n| ErrorLoading\r\n| SuccessLoading;\r\n\r\nconst personsReducer = (state= initialPersonsState, action: AllPersonsActions) => {\r\n    switch (action.type) {\r\n        case START_LOADING: return {\r\n            ...state,\r\n            isLoading: action.isLoading,\r\n        };\r\n        case ERROR_LOADING: return {\r\n            ...state,\r\n            isError: action.isError,\r\n        };\r\n        case SUCCESS_LOADING: return {\r\n            ...state,\r\n            isLoading: false,\r\n            persons: action.persons\r\n        };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default personsReducer;\r\n","import { Action } from \"redux\";\r\n\r\nconst SET_NAME= \"SET_NAME\";\r\nconst SET_LASTNAME = \"SET_LASTNAME\";\r\nconst SET_AGE = \"SET_AGE\";\r\nconst SET_MALE = \"SET_MALE\";\r\nconst SET_FEMALE = \"SET_FEMALE\";\r\n\r\ntype SetName = Action<typeof SET_NAME> & {\r\n    name: string;\r\n}\r\ntype SetLastName = Action<typeof SET_LASTNAME> & {\r\n    lastName: string;\r\n}\r\ntype SetAge = Action<typeof SET_AGE> & {\r\n    age: number | null;\r\n}\r\ntype SetMale = Action<typeof SET_MALE>;\r\ntype SetFemale = Action<typeof SET_FEMALE>;\r\n\r\nexport const setName = (name: string): SetName => ({\r\n    type: SET_NAME,\r\n    name,\r\n});\r\nexport const setLastName = (lastName: string): SetLastName => ({\r\n    type: SET_LASTNAME,\r\n    lastName,\r\n});\r\nexport const setAge = (age: number | null): SetAge => ({\r\n    type: SET_AGE,\r\n    age,\r\n});\r\nexport const setMale = (): SetMale => ({\r\n    type: SET_MALE,\r\n});\r\nexport const setFemale = (): SetFemale => ({\r\n    type: SET_FEMALE,\r\n});\r\n\r\nexport type AllFilersActions = SetName\r\n    | SetLastName\r\n    | SetAge\r\n    | SetMale\r\n    | SetFemale;\r\n\r\nexport type InitialFiltersState = {\r\n    name: string;\r\n    lastName: string;\r\n    age: number | null;\r\n    male: boolean;\r\n    female: boolean;\r\n};\r\n\r\nconst initialFiltersState: InitialFiltersState = {\r\n    name: \"\",\r\n    lastName: \"\",\r\n    age: null,\r\n    male: false,\r\n    female: false,\r\n};\r\n\r\nconst filtersReducer = (state = initialFiltersState, action: AllFilersActions) => {\r\n    switch (action.type) {\r\n        case SET_NAME:\r\n            console.log(action.name, 'Action');\r\n            return {\r\n            ...state,\r\n            name: action.name,\r\n        };\r\n        case SET_LASTNAME: return {\r\n            ...state,\r\n            lastName: action.lastName,\r\n        };\r\n        case SET_AGE: return {\r\n            ...state,\r\n            age: action.age,\r\n        };\r\n        case SET_MALE: return {\r\n            ...state,\r\n            male: !state.male,\r\n        };\r\n        case SET_FEMALE: return {\r\n            ...state,\r\n            female: !state.female,\r\n        };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default filtersReducer;\r\n","import { combineReducers,\r\n         createStore,\r\n         applyMiddleware,\r\n       } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport personsReducer, { InitialPersonsState } from \"./persons\";\r\nimport filtersReducer, {InitialFiltersState} from \"./filters\";\r\n\r\nconst rootReducer = combineReducers({\r\n    loadingPersons: personsReducer,\r\n    filters: filtersReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type State = {\r\n    loadingPersons: InitialPersonsState;\r\n    filters: InitialFiltersState;\r\n};\r\n\r\n//persons selectors\r\nexport const personsSelector = (state: State) => (state.loadingPersons.persons);\r\n\r\n//filters selectors\r\nexport const maleFilterSelector = (state: State): boolean => (state.filters.male);\r\nexport const femaleFilterSelector = (state: State): boolean => (state.filters.female);\r\nexport const ageFilterSelector = (state: State): number | null => (state.filters.age);\r\nexport const nameFilterSelector = (state: State): string => (state.filters.name.toLowerCase());\r\nexport const lastNameFilterSelector = (state: State): string => (state.filters.lastName.toLowerCase());\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./Person.scss\";\r\n\r\ntype Props = {\r\n    person: Person;\r\n}\r\n\r\nconst Person: React.FC<Props> = ({ person }) => {\r\n    const { name, lastname, age, sex } = person;\r\n\r\n    return (\r\n        <li className=\"person\">\r\n            <div className=\"person__name\">\r\n                {` ${name} ${lastname}`}\r\n            </div>\r\n            <div className=\"person__age\">\r\n                {`Возраст: ${age}`}\r\n            </div>\r\n            <div className=\"person__sex\">\r\n                {`Пол: ${sex === \"m\" ? \"мужской\" : \"женский\"}`}\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Person;\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    ageFilterSelector,\r\n    femaleFilterSelector,\r\n    lastNameFilterSelector,\r\n    maleFilterSelector,\r\n    nameFilterSelector,\r\n    personsSelector\r\n} from \"../../store/rootStore\";\r\nimport Person from \"../Person/Person\";\r\nimport \"./Persons.scss\";\r\n\r\nconst Persons = () => {\r\n    const persons: Person[] = useSelector(personsSelector);\r\n    const nameFilter: string = useSelector(nameFilterSelector);\r\n    const lastNameFilter: string = useSelector(lastNameFilterSelector);\r\n    const ageFilter: number | null = useSelector(ageFilterSelector);\r\n    const maleFilter: boolean = useSelector(maleFilterSelector);\r\n    const femaleFilter: boolean = useSelector(femaleFilterSelector);\r\n    const [preparePersons, setPreparePersons] = useState<Person[]>([]);\r\n\r\n    const filteringPersons = (\r\n        personsArray: Person[],\r\n        name: string,\r\n        lastName: string,\r\n        age: number | null,\r\n        male: boolean,\r\n        female: boolean\r\n    ): Person[] => {\r\n        if (\r\n            !name && !lastName && !age\r\n            && !male && !female\r\n        ) {\r\n            return [...personsArray]\r\n        }\r\n        return [...personsArray].filter(person => person.name.toLowerCase().includes(name))\r\n            .filter(person => person.lastname.toLowerCase().includes(lastName))\r\n            .filter(person => {\r\n                if (age) {\r\n                    return person.age === age;\r\n                } else {\r\n                    return person;\r\n                }\r\n            })\r\n            .filter(person => {\r\n                if ((male && female) || (!male && !female)) {\r\n\r\n                    return person;\r\n                }\r\n\r\n                if (male && !female) {\r\n                    return person.sex === \"m\"\r\n                }\r\n\r\n                return person.sex === \"f\"\r\n\r\n            })\r\n    };\r\n\r\n    useMemo(() => {\r\n        setPreparePersons(\r\n            filteringPersons(\r\n                persons,\r\n                nameFilter,\r\n                lastNameFilter,\r\n                ageFilter,\r\n                maleFilter,\r\n                femaleFilter\r\n            )\r\n        )\r\n    }, [\r\n        nameFilter,\r\n        lastNameFilter,\r\n        ageFilter,\r\n        maleFilter,\r\n        femaleFilter\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setPreparePersons([...persons]);\r\n    }, [persons]);\r\n\r\n    return (\r\n        <ul className=\"persons\">\r\n            {preparePersons.map(person => (\r\n                <Person\r\n                    key={person.age}\r\n                    person={person}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Persons;\r\n","import React, { useCallback, Dispatch, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport debounce from 'lodash.debounce';\r\nimport \"./FiltersBar.scss\";\r\nimport {AllFilersActions, setAge, setFemale, setLastName, setMale, setName} from \"../../store/filters\";\r\nimport { femaleFilterSelector, maleFilterSelector } from \"../../store/rootStore\";\r\n\r\nconst FiltersBar = () => {\r\n    const [nameValue, setNameValue ] = useState<string>(\"\");\r\n    const [lastNameValue, setLastNameValue ] = useState<string>(\"\");\r\n    const [ageValue, setAgeValue ] = useState<string>(\"\");\r\n    const [NaNAlert, changeNaNAlert] = useState<boolean>(false);\r\n    const maleIsChecked = useSelector(maleFilterSelector);\r\n    const femaleIsChecked = useSelector(femaleFilterSelector);\r\n\r\n    const filterDispatch = useDispatch<Dispatch<AllFilersActions>>();\r\n    const filterTextInputDispatch = (name: string, value: string) => {\r\n        if (name === \"name\") {\r\n            filterDispatch(setName(value));\r\n        } else if (name === \"lastName\") {\r\n            filterDispatch(setLastName(value))\r\n        } else if (name === \"age\") {\r\n            if (!isNaN(Number(value)) && value !== \"\") {\r\n                filterDispatch(setAge(Number(value)));\r\n            } else if (value === \"\") {\r\n                filterDispatch(setAge(null));\r\n            }\r\n        } else if (name === \"male\") {\r\n            filterDispatch(setMale())\r\n        }\r\n    };\r\n\r\n    const debounceFilterParams = useCallback(\r\n        debounce(filterTextInputDispatch, 500),\r\n        [],\r\n    );\r\n\r\n    const changeTextInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"name\") {\r\n            setNameValue(value);\r\n        } else if (name === \"lastName\") {\r\n            setLastNameValue(value);\r\n        } else if (name === \"age\") {\r\n            setAgeValue(value);\r\n        }\r\n\r\n        debounceFilterParams(name, value);\r\n    };\r\n    const isNumberAgeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        if (isNaN(Number(value)) && value !== \"\") {\r\n            changeNaNAlert(true);\r\n        } else {\r\n            changeNaNAlert(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"filters\">\r\n            <div className=\"filters__wrapper\">\r\n                <div>\r\n                    Имя\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={nameValue}\r\n                    className=\"filters__text-input\"\r\n                    placeholder=\"Введите имя\"\r\n                    onChange={(event) => {\r\n                        changeTextInput(event);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"filters__wrapper\">\r\n                <div>\r\n                    Фамилия\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={lastNameValue}\r\n                    className=\"filters__text-input\"\r\n                    placeholder=\"Введите фамилию\"\r\n                    onChange={(event) => {\r\n                        changeTextInput(event);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"filters__wrapper\">\r\n                <div>\r\n                    Возраст\r\n                </div>\r\n                <div className=\"filters__text-input-age-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"age\"\r\n                        value={ageValue}\r\n                        className=\"filters__text-input filters__text-input-age\"\r\n                        placeholder=\"Введите возраст(число)\"\r\n                        onChange={(event) => {\r\n                            changeTextInput(event);\r\n                            isNumberAgeInput(event);\r\n                        }}\r\n                    />\r\n                    {NaNAlert && <div className=\"filters__isNumber-alert\">\r\n                        Знание должно быть числом\r\n                    </div>}\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"filters__wrapper\">\r\n                <div>\r\n                    Пол\r\n                </div>\r\n                <div className=\"filters__checkbox-wrapper\">\r\n                    <label className=\"filters__checkbox-label\">\r\n                        <span>\r\n                            М\r\n                        </span>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"male\"\r\n                            checked={maleIsChecked}\r\n                            onChange={() => filterDispatch(setMale())}\r\n                        />\r\n                    </label>\r\n                    <label className=\"filters__checkbox-label\">\r\n                        <span>\r\n                            Ж\r\n                        </span>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"female\"\r\n                            checked={femaleIsChecked}\r\n                            onChange={() => filterDispatch(setFemale())}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FiltersBar;\r\n","import React, { useEffect, Dispatch } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport './App.scss';\nimport { AllPersonThunkAction, loadingPersons} from \"./store/persons\";\nimport Persons from \"./components/Persons/Persons\";\nimport FiltersBar from \"./components/FiltersBar/FiltersBar\";\n\nfunction App() {\n    const personThunkDispatch = useDispatch<Dispatch<AllPersonThunkAction>>();\n\n    useEffect(() => {\n        personThunkDispatch(loadingPersons());\n    }, []);\n\n  return (\n    <div className=\"app\">\n      <FiltersBar />\n      <Persons />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './index.scss';\nimport App from './App';\nimport store from \"./store/rootStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}